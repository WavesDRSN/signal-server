plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.google.protobuf' version "0.9.4"
}

jar {
	enabled = false
}

group = 'wavesDRSN'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	google()
}

ext {
	grpcVersion = '1.58.0' // Совместимая с grpc-spring-boot-starter 2.15.0
	protobufVersion = '3.25.5'
	bouncyCastleVersion = '1.70' // Криптография
}

dependencies {
	// gRPC
	implementation 'net.devh:grpc-spring-boot-starter:2.15.0.RELEASE'
	implementation "io.grpc:grpc-protobuf:${grpcVersion}"
	implementation "io.grpc:grpc-stub:${grpcVersion}"
	implementation "io.grpc:grpc-netty:${grpcVersion}"
	compileOnly "org.apache.tomcat:annotations-api:6.0.53"

	// Lombok и DevTools
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'

	// Тесты (JUnit 5)
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "io.grpc:grpc-testing:${grpcVersion}" // Версия должна совпадать с grpc-core
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Для работы с БД, миграции, JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'
	runtimeOnly 'org.postgresql:postgresql'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Bouncy Castle
	implementation "org.bouncycastle:bcprov-jdk15on:${bouncyCastleVersion}"
	implementation "org.bouncycastle:bcpkix-jdk15on:${bouncyCastleVersion}" // Для X.509

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5',
			'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'org.springframework.boot:spring-boot-starter-security'
}

protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:${protobufVersion}"
	}
	plugins {
		grpc {
			artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {}
		}
	}
}

sourceSets {
	main {
		java {
			srcDirs 'build/generated/source/proto/main/grpc'
			srcDirs 'build/generated/source/proto/main/java'
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
